{
  "_from": "kafka-streams",
  "_id": "kafka-streams@4.11.0",
  "_inBundle": false,
  "_integrity": "sha512-Nfb5uy0ESck1lXvWdr8rx0pOMbf0cijGqGBu2EZxyK2me+pE4M2O4SamBJjuK1eSJHGuS600Pfb1zSqRoQMjMQ==",
  "_location": "/kafka-streams",
  "_phantomChildren": {},
  "_requested": {
    "type": "tag",
    "registry": true,
    "raw": "kafka-streams",
    "name": "kafka-streams",
    "escapedName": "kafka-streams",
    "rawSpec": "",
    "saveSpec": null,
    "fetchSpec": "latest"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/kafka-streams/-/kafka-streams-4.11.0.tgz",
  "_shasum": "0b3aa9fa332cdb89b0cc4f26101bcef9dd3e9af8",
  "_spec": "kafka-streams",
  "_where": "/Users/carlosramos/workspace/tfm",
  "author": {
    "name": "Christian Froehlingsdorf",
    "email": "chris@5cf.de"
  },
  "bugs": {
    "url": "https://github.com/nodefluent/kafka-streams/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "bluebird": "~3.5.4",
    "debug": "~4.1.1",
    "global": "^4.3.2",
    "lodash.clone": "^4.5.0",
    "lodash.clonedeep": "^4.5.0",
    "most": "~1.7.3",
    "most-subject": "~5.3.0",
    "sinek": "~7.29.3"
  },
  "deprecated": false,
  "description": "kafka-streams for Node.js",
  "devDependencies": {
    "async": "~2.6.2",
    "jsdoc": "~3.6.1",
    "jsdoc-to-markdown": "~4.0.1",
    "log4bro": "~3.9.0",
    "mocha": "~6.1.4",
    "proxyquire": "~2.1.0",
    "uuid": "~3.3.2"
  },
  "homepage": "https://github.com/nodefluent/kafka-streams#readme",
  "keywords": [
    "kafka-streams",
    "kafka",
    "streams",
    "streaming",
    "topics",
    "produce",
    "consume",
    "merge",
    "join",
    "map",
    "flat",
    "filter",
    "reduce",
    "flink",
    "window",
    "combine"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "kafka-streams",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/nodefluent/kafka-streams.git"
  },
  "scripts": {
    "consumeFromTopic": "node ./examples/consumeFromTopic.js",
    "consumeOneProduceTwo": "node ./examples/consumeOneProduceTwo.js",
    "consumeOneProduceTwoTopics": "node ./examples/consumeOneProduceTwoTopics.js",
    "docs": "npm run jsdoc && npm run jsdoc2md",
    "fieldSum": "node ./examples/fieldSum.js",
    "jsdoc": "rm -r ./docs/jsdoc && jsdoc ./lib --recurse -R ./README.md -d ./docs/jsdoc",
    "jsdoc2md": "rm ./docs/doc.md && jsdoc2md -f ./lib/**/*.js -d > ./docs/doc.md",
    "kafka:logs": "docker-compose --file ./kafka-setup/docker-compose.yml logs -f",
    "kafka:start": "./kafka-setup/start.sh",
    "kafka:stop": "./kafka-setup/stop.sh",
    "mergeTopics": "node ./examples/mergeTopics.js",
    "obs-test": "_mocha test/unit/Observable.test.js",
    "produceToTopic": "node ./examples/produceToTopic.js",
    "test": "npm run test-unit && npm run test-int",
    "test-int": "_mocha --recursive --timeout 22500 --exit -R spec test/int",
    "test-int:cov": "istanbul cover _mocha -- --recursive --timeout 22500 --exit -R spec test/int/ && istanbul check-coverage --statements 60",
    "test-int:debug": "DEBUG=sinek:*,kafka-streams:* _mocha --recursive --timeout 22500 --exit -R spec test/int",
    "test-unit": "_mocha --recursive --exit -R spec test/unit",
    "topicAsTable": "node ./examples/topicAsTable.js",
    "ts": "tsc ./index.d.ts",
    "window": "node ./examples/window.js",
    "word-count": "yarn wordCount",
    "wordCount": "node ./examples/wordCount.js",
    "yarn:openssl": "LDFLAGS='-L/usr/local/opt/openssl/lib' CPPFLAGS='-I/usr/local/opt/openssl/include' yarn"
  },
  "typings": "index.d.ts",
  "version": "4.11.0"
}
